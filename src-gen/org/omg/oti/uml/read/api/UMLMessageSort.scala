/*
 * Copyright 2014 California Institute of Technology ("Caltech").
 * U.S. Government sponsorship acknowledged.
 *
 * Copyright 2015 Airbus.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * License Terms
 */

package org.omg.oti.uml.read.api

import scala.Enumeration

/**
  * This is an enumerated type that identifies the type of communication action that was used to generate the Message.
  *
  * <!-- Start of user code documentation -->
  * <!-- End of user code documentation -->
  */
object UMLMessageSort extends Enumeration {
  
  /**
    * The enumeration type
    *
    * <!-- Start of user code doc for metaAttributes -->
    * <!-- End of user code doc for metaAttributes -->
    */
  type UMLMessageSort = Value

  /**
    * The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous = false.
    *
    * <!-- Start of user code doc for asynchCall -->
    * <!-- End of user code doc for asynchCall -->
    */
  val asynchCall = Value

  /**
    * The message was generated by an asynchronous send action.
    *
    * <!-- Start of user code doc for asynchSignal -->
    * <!-- End of user code doc for asynchSignal -->
    */
  val asynchSignal = Value

  /**
    * The message designating the creation of another lifeline object.
    *
    * <!-- Start of user code doc for createMessage -->
    * <!-- End of user code doc for createMessage -->
    */
  val createMessage = Value

  /**
    * The message designating the termination of another lifeline.
    *
    * <!-- Start of user code doc for deleteMessage -->
    * <!-- End of user code doc for deleteMessage -->
    */
  val deleteMessage = Value

  /**
    * The message is a reply message to an operation call.
    *
    * <!-- Start of user code doc for reply -->
    * <!-- End of user code doc for reply -->
    */
  val reply = Value

  /**
    * The message was generated by a synchronous call to an operation.
    *
    * <!-- Start of user code doc for synchCall -->
    * <!-- End of user code doc for synchCall -->
    */
  val synchCall = Value
}
