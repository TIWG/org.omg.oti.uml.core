= OMG Tool-neutral Interchange (OTI) API for OMG UML 2.5-compliant Modeling Tools =

OTI is a parameterized functional API for OMG's UML 2.5 for querying & transforming OMG UML 2.5 models.
This functional API is parameterized by tool-specific adapters. An OTI adapter maps the tool-neutral OTI API
onto the corresponding tool-specific APIs.

== 1. Tool-specific OTI Adapters ==

Currently, adapters are available for the following OMG UML 2.5 implementations:

  - MagicDraw 18.0 SP4 (see org.omg.oti.magicdraw)
  - Papyrus (see org.omg.oti.papyrus)

== 2. Capabilities ==

=== 2.1. [[org.omg.oti.uml]]: MOF-like Reflection about UML models ===

MOF-like API such as reflection capabilities

=== 2.2. [[org.omg.oti.uml.read]]: OCL/QVT-like Query of UML models  ===

The OTI UML Query API covers all the metaclasses, attributes, properties and query operations
specified in the normative OMG UML 2.5 abstract syntax metamodel. Where the OMG UML 2.5 specification
includes OCL constraints for specifying derived properties or query operations,
the OTI UML API provides corresponding tool-neutral implementations in Scala.

=== 2.3. [[org.omg.oti.uml.validation]]: Generic OTI-based Implementation of
    normative OMG MOF 2.5 EMOF and CMOF Validation Constraints ===

  - [[http://www.omg.org/spec/MOF/20131001/EMOFConstraints.ocl MOF 2.5 EMOF constraints]]
  - [[http://www.omg.org/spec/MOF/20131001/CMOFConstraints.ocl MOF 2.5 CMOF constraints]]

=== 2.4. [[org.omg.oti.uml.xmi]]: Generic OTI-based XMI Document/Extent ===

OTI's Document API provides the basis for OMG XMI 2.5.1-based document export/import and inter-document linking.
This API combines the concept of OMG XMI2.5.1 Document (a locatable resource that can be referenced),
and that of OMG MOF 2.5 Extent (exporting/importing a document involves all elements transitively contained
in the context of the document root element).

This package also includes an API for the OMG XMI 2.5.1, Section B.6, (Canonical XMI) Identification.

== 3. Third-party capabilities ==

=== 3.1. [[https://github.com/nikita-volkov/sext]]: Scala Extensions for pretty-printing ===

OTI uses a subset of sext for pretty-printing of Scala collections.
